package nl.liacs.boundingdiametersui;

import org.gephi.graph.api.GraphController;
import org.openide.util.Lookup;

public class DiameterMetricPanel extends javax.swing.JPanel {

    /**
     * Creates new form DiameterMetricPanel2
     */
    public DiameterMetricPanel() {
        initComponents();
    }
    
    public void setEccentricitiesFlag(boolean b) {
        eccentricitiesCheckbox.setSelected(b);
    }
    public boolean getEccentricitiesFlag() {
        return eccentricitiesCheckbox.isSelected();
    }
    
    public void setPeripheryFlag(boolean b) {
        peripheryCheckbox.setSelected(b);
    }
    public boolean getPeripheryFlag() {
        return peripheryCheckbox.isSelected();
    }
    
    public void setCenterFlag(boolean b) {
        centerCheckbox.setSelected(b);
    }
    public boolean getCenterFlag() {
        return centerCheckbox.isSelected();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new org.jdesktop.swingx.JXHeader();
        eccentricitiesCheckbox = new javax.swing.JCheckBox();
        peripheryCheckbox = new javax.swing.JCheckBox();
        centerCheckbox = new javax.swing.JCheckBox();

        header.setDescription(org.openide.util.NbBundle.getMessage(DiameterMetricPanel.class, "DiameterMetricPanel.header.description")); // NOI18N
        header.setDoubleBuffered(false);
        header.setTitle(org.openide.util.NbBundle.getMessage(DiameterMetricPanel.class, "DiameterMetricPanel.header.title")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(eccentricitiesCheckbox, org.openide.util.NbBundle.getMessage(DiameterMetricPanel.class, "DiameterMetricPanel.eccentricitiesCheckbox.text")); // NOI18N
        eccentricitiesCheckbox.setToolTipText(org.openide.util.NbBundle.getMessage(DiameterMetricPanel.class, "DiameterMetricPanel.eccentricitiesCheckbox.toolTipText")); // NOI18N
        eccentricitiesCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eccentricitiesCheckboxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(peripheryCheckbox, org.openide.util.NbBundle.getMessage(DiameterMetricPanel.class, "DiameterMetricPanel.peripheryCheckbox.text")); // NOI18N
        peripheryCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peripheryCheckboxActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(centerCheckbox, org.openide.util.NbBundle.getMessage(DiameterMetricPanel.class, "DiameterMetricPanel.centerCheckbox.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eccentricitiesCheckbox)
                    .addComponent(peripheryCheckbox)
                    .addComponent(centerCheckbox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(eccentricitiesCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(peripheryCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(centerCheckbox)
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void eccentricitiesCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eccentricitiesCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eccentricitiesCheckboxActionPerformed

    private void peripheryCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peripheryCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_peripheryCheckboxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox centerCheckbox;
    private javax.swing.JCheckBox eccentricitiesCheckbox;
    private org.jdesktop.swingx.JXHeader header;
    private javax.swing.JCheckBox peripheryCheckbox;
    // End of variables declaration//GEN-END:variables
}
