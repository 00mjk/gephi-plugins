/*
 * Copyright (c) 2011, INRIA
 * All rights reserved.
 */
package fr.inria.edelweiss.sparql.semantictweet;

/**
 *
 * @author edemairy
 */
public class SemanticTweetDriverParametersPanel extends javax.swing.JPanel {

    SemanticTweetDriverParameters parameters;

    /**
     * Creates new form SemanticTweetDriverParametersPanel
     */
    private SemanticTweetDriverParametersPanel() {
        super();
        initComponents();
    }

    SemanticTweetDriverParametersPanel(SemanticTweetDriverParameters aThis) {
        this();
        parameters = aThis;
        fillParameters();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rootUrl = new javax.swing.JTextField();
        depth = new javax.swing.JTextField();
        maxNodes = new javax.swing.JTextField();

        jLabel1.setText(org.openide.util.NbBundle.getMessage(SemanticTweetDriverParametersPanel.class, "SemanticTweetDriverParametersPanel.jLabel1.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(SemanticTweetDriverParametersPanel.class, "SemanticTweetDriverParametersPanel.jLabel2.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(SemanticTweetDriverParametersPanel.class, "SemanticTweetDriverParametersPanel.jLabel3.text")); // NOI18N

        rootUrl.setText(org.openide.util.NbBundle.getMessage(SemanticTweetDriverParametersPanel.class, "SemanticTweetDriverParametersPanel.rootUrl.text")); // NOI18N
        rootUrl.setToolTipText(org.openide.util.NbBundle.getMessage(SemanticTweetDriverParametersPanel.class, "SemanticTweetDriverParametersPanel.rootUrl.toolTipText")); // NOI18N
        rootUrl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rootUrlActionPerformed(evt);
            }
        });

        depth.setText(org.openide.util.NbBundle.getMessage(SemanticTweetDriverParametersPanel.class, "SemanticTweetDriverParametersPanel.depth.text")); // NOI18N
        depth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depthActionPerformed(evt);
            }
        });

        maxNodes.setText(org.openide.util.NbBundle.getMessage(SemanticTweetDriverParametersPanel.class, "SemanticTweetDriverParametersPanel.maxNodes.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maxNodes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(depth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rootUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rootUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(depth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(maxNodes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rootUrlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rootUrlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rootUrlActionPerformed

    private void depthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_depthActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField depth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField maxNodes;
    private javax.swing.JTextField rootUrl;
    // End of variables declaration//GEN-END:variables

    private void fillParameters() {
        getRootUrl().setText(parameters.getRoot());
        getMaxNodes().setText(Integer.toString(parameters.getMaxNodes()));
        getDepth().setText(Integer.toString(parameters.getDepth()));
    }

    /**
     * @return the depth
     */
    public javax.swing.JTextField getDepth() {
        return depth;
    }

    /**
     * @param depth the depth to set
     */
    public void setDepth(javax.swing.JTextField depth) {
        this.depth = depth;
    }

    /**
     * @return the maxNodes
     */
    public javax.swing.JTextField getMaxNodes() {
        return maxNodes;
    }

    /**
     * @param maxNodes the maxNodes to set
     */
    public void setMaxNodes(javax.swing.JTextField maxNodes) {
        this.maxNodes = maxNodes;
    }

    /**
     * @return the rootUrl
     */
    public javax.swing.JTextField getRootUrl() {
        return rootUrl;
    }

    /**
     * @param rootUrl the rootUrl to set
     */
    public void setRootUrl(javax.swing.JTextField rootUrl) {
        this.rootUrl = rootUrl;
    }

}
